{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","timeNow","Date","intervalID","this","setState","setInterval","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","Math","floor","random","showClock","hideClock","changeName","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAwCeA,E,4MArCbC,MAAQ,CACNC,QAAS,IAAIC,KACbC,WAAY,M,uDAGd,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZF,WAAYG,aAAY,WACtB,EAAKD,SAAS,CAAEJ,QAAS,IAAIC,OAE7BK,QAAQC,IAAI,EAAKR,MAAMC,QAAQQ,wBAC9B,S,gCAIP,SAAmBC,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,S,kCAI9E,WACEE,cAAcT,KAAKJ,MAAMG,c,oBAG3B,WACE,OACE,2CAEG,IACAC,KAAKJ,MAAMC,QAAQQ,0B,GAhCRK,IAAMC,WCsDXC,G,kNAlDbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAM,IAAAD,KAAKE,UAA4B,G,EAGzDC,UAAY,kBACV,EAAKjB,SAAS,CAAEY,gBAAgB,K,EAGlCM,UAAY,kBACV,EAAKlB,SAAS,CAAEY,gBAAgB,K,EAGlCO,WAAa,kBACX,EAAKnB,SAAS,CAAEa,UAAWC,KAAKC,MAAM,IAAAD,KAAKE,UAA4B,K,4CAGzE,WACE,OACE,yBAAKI,UAAU,OACb,0CAEG,IACArB,KAAKJ,MAAMkB,WAEbd,KAAKJ,MAAMiB,gBACP,kBAAC,EAAD,CAAON,KAAMP,KAAKJ,MAAMkB,YAC7B,4BACEQ,KAAK,SACLC,QAASvB,KAAKkB,WAFhB,cAMA,4BACEI,KAAK,SACLC,QAASvB,KAAKmB,WAFhB,cAMA,4BACEG,KAAK,SACLC,QAASvB,KAAKoB,YAFhB,oB,GAxCUV,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.113a7caf.chunk.js","sourcesContent":["import React from 'react';\n\nclass Clock extends React.Component {\n  state = {\n    timeNow: new Date(),\n    intervalID: null,\n  };\n\n  componentDidMount() {\n    this.setState({\n      intervalID: setInterval(() => {\n        this.setState({ timeNow: new Date()});\n        // eslint-disable-next-line\n        console.log(this.state.timeNow.toLocaleTimeString())\n      }, 1000)\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalID)\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.timeNow.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n  }\n\n  showClock = () => (\n    this.setState({ isClockVisible: true })\n  );\n\n  hideClock = () => (\n    this.setState({ isClockVisible: false })\n  );\n\n  changeName = () => (\n    this.setState({ clockName: Math.floor(Math.random() * (100 - 1 + 1)) + 1 })\n  );\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock\n          {' '}\n          {this.state.clockName}\n        </h1>\n        {this.state.isClockVisible\n          && <Clock name={this.state.clockName} />}\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Change Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}